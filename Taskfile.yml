version: '3'

dotenv: ['.env']

tasks:
  tests:
    cmds:
      - go test ./...

  build:
    cmds:
      - go build ./cmd/app/main.go

  cover:
    cmds:
      - go test -short -count=1 -race -coverprofile=coverage.out ./...
      - go tool cover -html=coverage.out
      - rm coverage.out

  gen:
    cmds:
      - mockgen -source=internal/services/message.go -destination internal/services/mocks/message_mock.go
      - mockgen -source=internal/services/template.go -destination internal/services/mocks/template_mock.go
      - mockgen -source=internal/services/user.go -destination internal/services/mocks/user_mock.go
      - mockgen -source=internal/controllers/template.go -destination internal/controllers/mocks/template_mock.go

  protos:
    cmds:
      - cd protos && protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative template.proto


  ## task migrate-create NAME=some-name
  migrate-create:
    cmds:
      - migrate create -ext sql -dir internal/databases/migrations {{.NAME}}

  migrate-up:
    cmds:
      - migrate -path ./internal/databases/migrations -database ${DATABASE_URL}?sslmode=disable up

  migrate-fix:
    cmds:
      - migrate -path ./internal/databases/migrations -database $DATABASE_URL?sslmode=disable force {{.NUMBER}}

  migrate-down:
    cmds:
      - migrate -path ./internal/databases/migrations -database $DATABASE_URL?sslmode=disable down {{.NUMBER}}

  run:
    - go run ./cmd/app/main.go
    - docker-compose up
